name: Windows CMake Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-2022

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64

    - name: Install Vulkan SDK
      run: |
        $VulkanVersion = "1.3.283.0"
        $VulkanUrl = "https://sdk.lunarg.com/sdk/download/$VulkanVersion/windows/VulkanSDK-$VulkanVersion-Installer.exe"
        $InstallerPath = "$env:TEMP\VulkanSDK-Installer.exe"
        
        Write-Host "Downloading Vulkan SDK..."
        try {
          Invoke-WebRequest -Uri $VulkanUrl -OutFile $InstallerPath -TimeoutSec 300
        } catch {
          Write-Error "Failed to download Vulkan SDK: $_"
          exit 1
        }
        
        Write-Host "Installing Vulkan SDK silently..."
        try {
          $process = Start-Process -FilePath $InstallerPath -ArgumentList @("/S") -PassThru -NoNewWindow
          $timeout = 600  # 10 minutes timeout
          if (-not $process.WaitForExit($timeout * 1000)) {
            $process.Kill()
            Write-Error "Vulkan SDK installation timed out after $timeout seconds"
            exit 1
          }
          if ($process.ExitCode -ne 0) {
            Write-Error "Vulkan SDK installation failed with exit code: $($process.ExitCode)"
            exit 1
          }
        } catch {
          Write-Error "Failed to install Vulkan SDK: $_"
          exit 1
        }
        
        # Set environment variables
        $VulkanPath = "C:\VulkanSDK\$VulkanVersion"
        echo "VULKAN_SDK=$VulkanPath" >> $env:GITHUB_ENV
        echo "$VulkanPath\Bin" >> $env:GITHUB_PATH
        
        # Verify installation
        Start-Sleep -Seconds 5  # Give installer time to finish
        if (Test-Path "$VulkanPath\Bin\glslc.exe") {
          Write-Host "Vulkan SDK installed successfully"
          & "$VulkanPath\Bin\glslc.exe" --version
        } else {
          Write-Error "Vulkan SDK installation verification failed - glslc.exe not found"
          if (Test-Path $VulkanPath) {
            Write-Host "Contents of Vulkan SDK directory:"
            Get-ChildItem $VulkanPath -Recurse | Select-Object Name, FullName
          }
          exit 1
        }
      shell: powershell

    - name: Create build directory and run CMake
      run: |
        mkdir build
        cd build
        cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
        cmake --build . --config Release --parallel
      shell: cmd

    - name: List build directory contents
      run: |
        dir build\Release /s
      shell: cmd

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact-windows
        path: |
          build/Release/
          build/shaders/
  
  test-windows:
    needs: build-windows
    runs-on: windows-2022

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.283.0
        vulkan-use-cache: true

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifact-windows
        path: ./

    - name: Run RendererTests
      run: |
        if exist Release\RendererTests.exe (
          Release\RendererTests.exe
        ) else (
          echo "RendererTests.exe not found"
          dir Release\ /b
          exit 1
        )
      shell: cmd