name: Windows CMake Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-2022

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64

    - name: Install Vulkan SDK
      run: |
        choco install vulkan-sdk --version=1.3.283.0 -y
        $VulkanPath = "C:\VulkanSDK\1.3.283.0"
        echo "VULKAN_SDK=$VulkanPath" >> $env:GITHUB_ENV
        echo "$VulkanPath\Bin" >> $env:GITHUB_PATH
        
        # Verify installation
        if (Test-Path "$VulkanPath\Bin\glslc.exe") {
          Write-Host "Vulkan SDK installed successfully"
          & "$VulkanPath\Bin\glslc.exe" --version
        } else {
          Write-Error "Vulkan SDK installation failed - checking available versions"
          choco list vulkan-sdk --all-versions
          exit 1
        }
      shell: powershell

    - name: Create build directory and run CMake
      run: |
        mkdir build
        cd build
        cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
        cmake --build . --config Release --parallel
      shell: cmd

    - name: List build directory contents
      run: |
        dir build\Release /s
      shell: cmd

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact-windows
        path: |
          build/Release/
          build/shaders/
  
  test-windows:
    needs: build-windows
    runs-on: windows-2022

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Vulkan SDK
      run: |
        choco install vulkan-sdk --version=1.3.283.0 -y
        $VulkanPath = "C:\VulkanSDK\1.3.283.0"
        echo "$VulkanPath\Bin" >> $env:GITHUB_PATH
      shell: powershell

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifact-windows
        path: ./

    - name: Run RendererTests
      run: |
        if exist Release\RendererTests.exe (
          Release\RendererTests.exe
        ) else (
          echo "RendererTests.exe not found"
          dir Release\ /b
          exit 1
        )
      shell: cmd