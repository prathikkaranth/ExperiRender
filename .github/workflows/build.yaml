name: Linux CMake Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Cache key versions - increment when dependencies need to be refreshed
  VULKAN_SDK_VERSION: "1.3.283.0"
  SDL2_CACHE_VERSION: "v1"

jobs:
  build-linux:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache Vulkan SDK
      id: cache-vulkan
      uses: actions/cache@v4
      with:
        path: |
          /usr/local/bin/vulkan-*
          /usr/local/include/vulkan
          /usr/local/lib/*vulkan*
          /usr/local/share/vulkan
          /etc/apt/trusted.gpg.d/lunarg.asc
          /etc/apt/sources.list.d/lunarg-vulkan-noble.list
        key: vulkan-sdk-${{ runner.os }}-${{ env.VULKAN_SDK_VERSION }}

    - name: Install Vulkan SDK
      if: steps.cache-vulkan.outputs.cache-hit != 'true'
      run: |
        wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-noble.list http://packages.lunarg.com/vulkan/lunarg-vulkan-noble.list
        sudo apt update
        sudo apt install -y vulkan-sdk

    - name: Restore Vulkan SDK from cache
      if: steps.cache-vulkan.outputs.cache-hit == 'true'
      run: |
        sudo apt update

    - name: Cache SDL2 packages
      id: cache-sdl2
      uses: actions/cache@v4
      with:
        path: |
          /var/cache/apt/archives/libsdl2*.deb
          /var/cache/apt/archives/libsdl-*.deb
        key: sdl2-packages-${{ runner.os }}-${{ env.SDL2_CACHE_VERSION }}

    - name: Install SDL2 and dependencies
      run: |
        sudo apt install -y libsdl2-2.0-0 libsdl2-dev libsdl-image1.2-dev libsdl1.2-dev

    - name: Cache CMake build dependencies
      uses: actions/cache@v4
      with:
        path: |
          build/_deps
          ~/.cmake
        key: cmake-deps-${{ runner.os }}-${{ hashFiles('CMakeLists.txt', 'cmake/**/*.cmake') }}
        restore-keys: |
          cmake-deps-${{ runner.os }}-

    - name: Create build directory and run CMake
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j$(nproc)

    - name: List build directory contents
      run: |
        ls -l ./tests

    - name: Upload entire build directory
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: build/
        retention-days: 1  # Keep artifacts for 1 day only
  
  test-linux:
    needs: build-linux
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache Vulkan SDK
      id: cache-vulkan-test
      uses: actions/cache@v4
      with:
        path: |
          /usr/local/bin/vulkan-*
          /usr/local/include/vulkan
          /usr/local/lib/*vulkan*
          /usr/local/share/vulkan
          /etc/apt/trusted.gpg.d/lunarg.asc
          /etc/apt/sources.list.d/lunarg-vulkan-noble.list
        key: vulkan-sdk-${{ runner.os }}-${{ env.VULKAN_SDK_VERSION }}

    - name: Install Vulkan SDK
      if: steps.cache-vulkan-test.outputs.cache-hit != 'true'
      run: |
        wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-noble.list http://packages.lunarg.com/vulkan/lunarg-vulkan-noble.list
        sudo apt update
        sudo apt install -y vulkan-sdk

    - name: Restore Vulkan SDK from cache
      if: steps.cache-vulkan-test.outputs.cache-hit == 'true'
      run: |
        sudo apt update

    - name: Cache SDL2 runtime packages
      id: cache-sdl2-runtime
      uses: actions/cache@v4
      with:
        path: |
          /var/cache/apt/archives/libsdl2-2.0-0*.deb
        key: sdl2-runtime-${{ runner.os }}-${{ env.SDL2_CACHE_VERSION }}

    - name: Install SDL2 runtime dependencies
      run: |
        sudo apt install -y libsdl2-2.0-0

    - name: Download RendererTests artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifact
        path: ./

    - name: Run RendererTests
      run: |
        chmod +x ./RendererTests
        ./RendererTests